// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.28;

// Contract containing all collected custom errors
/* This file is generated automatically */

contract OZErrors {
    error AccessControlBadConfirmation();
    error AccessControlEnforcedDefaultAdminDelay(uint48 schedule);
    error AccessControlEnforcedDefaultAdminRules();
    error AccessControlInvalidDefaultAdmin(address defaultAdmin);
    error AccessControlNonRevokable();
    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);
    error AccessManagedInvalidAuthority(address authority);
    error AccessManagedRequiredDelay(address caller, uint32 delay);
    error AccessManagedUnauthorized(address caller);
    error AccessManagerAlreadyScheduled(bytes32 operationId);
    error AccessManagerBadConfirmation();
    error AccessManagerExpired(bytes32 operationId);
    error AccessManagerInvalidInitialAdmin(address initialAdmin);
    error AccessManagerLockedRole(uint64 roleId);
    error AccessManagerNotReady(bytes32 operationId);
    error AccessManagerNotScheduled(bytes32 operationId);
    error AccessManagerUnauthorizedAccount(address msgsender, uint64 roleId);
    error AccessManagerUnauthorizedCall(address caller, address target, bytes4 selector);
    error AccessManagerUnauthorizedCancel(address msgsender, address caller, address target, bytes4 selector);
    error AccessManagerUnauthorizedConsume(address target);
    error AddressEmptyCode(address target);
    error BeaconInvalidImplementation(address implementation);
    error BeaconProxyBeaconSlotAddress(address beacon);
    error CallerNotMinter(address caller);
    error CheckpointUnorderedInsertion();
    error CloneArgumentsTooLong();
    error Create2EmptyBytecode();
    error CustomError();
    error ECDSAInvalidSignature();
    error ECDSAInvalidSignatureLength(uint256 length);
    error ECDSAInvalidSignatureS(bytes32 s);
    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);
    error ERC1155InvalidApprover(address approver);
    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);
    error ERC1155InvalidOperator(address operator);
    error ERC1155InvalidReceiver(address receiver);
    error ERC1155InvalidSender(address sender);
    error ERC1155MissingApprovalForAll(address operator, address owner);
    error ERC1363ApproveFailed(address spender, uint256 value);
    error ERC1363InvalidReceiver(address receiver);
    error ERC1363InvalidSpender(address spender);
    error ERC1363TransferFailed(address receiver, uint256 value);
    error ERC1363TransferFromFailed(address sender, address receiver, uint256 value);
    error ERC1967InvalidAdmin(address admin);
    error ERC1967InvalidBeacon(address beacon);
    error ERC1967InvalidImplementation(address implementation);
    error ERC1967NonPayable();
    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);
    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);
    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);
    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);
    error ERC20InvalidApprover(address approver);
    error ERC20InvalidCap(uint256 cap);
    error ERC20InvalidReceiver(address receiver);
    error ERC20InvalidSender(address sender);
    error ERC20InvalidSpender(address spender);
    error ERC20InvalidUnderlying(address token);
    error ERC2612ExpiredSignature(uint256 deadline);
    error ERC2612InvalidSigner(address signer, address owner);
    error ERC2771ForwarderExpiredRequest(uint48 deadline);
    error ERC2771ForwarderInvalidSigner(address signer, address from);
    error ERC2771ForwarderMismatchedValue(uint256 requestedValue, uint256 msgValue);
    error ERC2771UntrustfulTarget(address target, address forwarder);
    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);
    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);
    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);
    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);
    error ERC3156ExceededMaxLoan(uint256 maxLoan);
    error ERC3156InvalidReceiver(address receiver);
    error ERC3156UnsupportedToken(address token);
    error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max);
    error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max);
    error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max);
    error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max);
    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);
    error ERC6372InconsistentClock();
    error ERC721EnumerableForbiddenBatchMint();
    error ERC721ExceededMaxBatchMint(uint256 batchSize, uint256 maxBatch);
    error ERC721ForbiddenBatchBurn();
    error ERC721ForbiddenBatchMint();
    error ERC721ForbiddenMint();
    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);
    error ERC721InsufficientApproval(address operator, uint256 tokenId);
    error ERC721InvalidApprover(address approver);
    error ERC721InvalidOperator(address operator);
    error ERC721InvalidOwner(address owner);
    error ERC721InvalidReceiver(address receiver);
    error ERC721InvalidSender(address sender);
    error ERC721NonexistentToken(uint256 tokenId);
    error ERC721OutOfBoundsIndex(address owner, uint256 index);
    error ERC721UnsupportedToken(address token);
    error ERC7579AlreadyInstalledModule(uint256 moduleTypeId, address module);
    error ERC7579DecodingError();
    error ERC7579MismatchedModuleTypeId(uint256 moduleTypeId, address module);
    error ERC7579UninstalledModule(uint256 moduleTypeId, address module);
    error ERC7579UnsupportedModuleType(uint256 moduleTypeId);
    error EnforcedPause();
    error EnumerableMapNonexistentKey(bytes32 key);
    error ExpectedPause();
    error FailedCall();
    error FailedDeployment();
    error FailedOp(uint256 opIndex, string reason);
    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);
    error GovernorAlreadyCastVote(address voter);
    error GovernorAlreadyInitializedLatestProposalId();
    error GovernorAlreadyOverriddenVote(address account);
    error GovernorAlreadyQueuedProposal(uint256 proposalId);
    error GovernorDisabledDeposit();
    error GovernorExceedRemainingWeight(address voter, uint256 usedVotes, uint256 remainingWeight);
    error GovernorInsufficientProposerVotes(address proposer, uint256 votes, uint256 threshold);
    error GovernorInvalidProposalLength(uint256 targets, uint256 calldatas, uint256 values);
    error GovernorInvalidQuorumFraction(uint256 quorumNumerator, uint256 quorumDenominator);
    error GovernorInvalidSignature(address voter);
    error GovernorInvalidVoteParams();
    error GovernorInvalidVoteType();
    error GovernorInvalidVotingPeriod(uint256 votingPeriod);
    error GovernorLockedIgnore();
    error GovernorMismatchedNonce(uint256 proposalId, uint256 expectedNonce, uint256 actualNonce);
    error GovernorNonexistentProposal(uint256 proposalId);
    error GovernorNotQueuedProposal(uint256 proposalId);
    error GovernorOnlyExecutor(address account);
    error GovernorQueueNotImplemented();
    error GovernorRestrictedProposer(address proposer);
    error GovernorUnableToCancel(uint256 proposalId, address account);
    error GovernorUnmetDelay(uint256 proposalId, uint256 neededTimestamp);
    error InsufficientBalance(uint256 balance, uint256 needed);
    error InvalidAccountNonce(address account, uint256 currentNonce);
    error InvalidBufferSize();
    error InvalidCliffDuration(uint64 cliffSeconds, uint64 durationSeconds);
    error InvalidInitialization();
    error InvalidShortString();
    error MerkleProofInvalidMultiproof();
    error MissingPrecompile(address);
    error NotInitializing();
    error OutOfRangeAccess();
    error OwnableInvalidOwner(address owner);
    error OwnableUnauthorizedAccount(address account);
    error ProxyDeniedAdminAccess();
    error ReentrancyGuardReentrantCall();
    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);
    error SafeCastOverflowedIntToUint(int256 value);
    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);
    error SafeCastOverflowedUintToInt(uint256 value);
    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);
    error SafeERC20FailedOperation(address token);
    error StringTooLong(string str);
    error StringsInsufficientHexLength(uint256 value, uint256 length);
    error StringsInvalidAddressFormat();
    error StringsInvalidChar();
    error TimelockInsufficientDelay(uint256 delay, uint256 minDelay);
    error TimelockInvalidOperationLength(uint256 targets, uint256 payloads, uint256 values);
    error TimelockUnauthorizedCaller(address caller);
    error TimelockUnexecutedPredecessor(bytes32 predecessorId);
    error TimelockUnexpectedOperationState(bytes32 operationId, bytes32 expectedStates);
    error UUPSUnauthorizedCallContext();
    error UUPSUnsupportedProxiableUUID(bytes32 slot);
    error VotesExpiredSignature(uint256 expiry);
}
